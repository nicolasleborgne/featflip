# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices.html#use-parameters-for-application-configuration
parameters:

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\Infrastructure\Symfony\:
        resource: '../src/Infrastructure/Symfony'
        exclude:
            - '../src/Infrastructure/SymfonyDependencyInjection/'
            - '../src/Infrastructure/SymfonyEntity/'
            - '../src/Infrastructure/Symfony/Kernel.php'

    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Domain\Organization\OrganizationRepositoryInterface: '@App\Infrastructure\Symfony\Repository\InMemoryOrganizationRepository'
    App\Infrastructure\Symfony\Repository\DoctrineOrganizationRepository:
        public: true

    App\Domain\Project\ProjectRepositoryInterface: '@App\Infrastructure\Symfony\Repository\InMemoryProjectRepository'
    App\Infrastructure\Symfony\Repository\DoctrineProjectRepository:
        public: true

    App\Domain\Feature\FeatureRepositoryInterface: '@App\Infrastructure\Symfony\Repository\InMemoryFeatureRepository'
    App\Infrastructure\Symfony\Repository\DoctrineFeatureRepository:
        public: true

    App\Domain\Organization\FindOrganizationFromSlug: '@App\Infrastructure\Symfony\Query\DoctrineFindOrganizationFromSlug'
    App\Infrastructure\Symfony\Query\InMemoryFindOrganizationFromSlug:
        public: true
    App\Infrastructure\Symfony\Query\DoctrineFindOrganizationFromSlug:
        public: true

    App\Domain\Project\FindProjectFromSlug: '@App\Infrastructure\Symfony\Query\DoctrineFindProjectFromSlug'
    App\Infrastructure\Symfony\Query\InMemoryFindProjectFromSlug:
        public: true
    App\Infrastructure\Symfony\Query\DoctrineFindProjectFromSlug:
        public: true

    App\UseCases\CreateOrganization\CreateOrganizationUseCase: ~

    App\UseCases\CreateProject\CreateProjectUseCase: ~

    App\UseCases\CreateFeature\CreateFeatureUseCase: ~

    App\Infrastructure\Symfony\ParamConverter\SlugToOrganization:
        tags:
            - { name: request.param_converter, converter: 'slug_to_organization' }

    App\Infrastructure\Symfony\ParamConverter\SlugToProject:
        tags:
            - { name: request.param_converter, converter: 'slug_to_project' }
